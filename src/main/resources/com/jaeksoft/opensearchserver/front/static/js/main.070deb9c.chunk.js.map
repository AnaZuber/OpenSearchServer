{"version":3,"sources":["store.ts","types.ts","media/oss_logo.png","Navbar.tsx","constants.ts","Gql.tsx","Indices.tsx","Schema.tsx","WebCrawls.tsx","FileCrawls.tsx","components/CrawlFilterItemView.tsx","WebCrawl.tsx","FileCrawl.tsx","Crawls.tsx","index.tsx"],"names":["Views","CrawlsViews","STATE_KEY","ActionTypes","defaultState","view","INDICES","crawlsView","WEB_CRAWLS","selectedIndex","undefined","selectedWebCrawl","selectedFileCrawl","CrawlFilterType","setView","type","SET_VIEW","setCrawlsView","SET_CRAWLS_VIEW","editSchema","EDIT_SCHEMA","storageState","window","localStorage","getItem","initialState","JSON","parse","createStore","state","action","CRAWLS","SCHEMA","EDIT_WEB_CRAWL","selectedCrawl","WEB_CRAWL","EDIT_FILE_CRAWL","FILE_CRAWL","setItem","stringify","Navbar","useSelector","dispatch","useDispatch","AppBar","position","color","Toolbar","src","oss_logo","alt","style","maxHeight","width","Tabs","value","onChange","event","newValue","aria-label","Tab","label","QUERIES","GRAPHQL","GRAPHQL_ENDPOINT","Gql","fetcher","graphQLParams","a","fetch","method","headers","Accept","body","credentials","data","json","catch","text","INDEX_LIST","gql","CREATE_INDEX","DELETE_INDEX","Indices","useState","keywords","setKeywords","start","rows","useQuery","variables","fetchPolicy","loading","error","refetch","useMutation","name","gqlCreate","loadingCreate","gqlDelete","loadingDelete","alert","message","console","Box","p","Grid","container","spacing","alignItems","item","xs","TextField","size","fullWidth","e","target","CircularProgress","Button","disabled","length","indexList","variant","onClick","then","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","map","scope","id","Schema","CRAWL_LIST","RUN_CRAWL","DELETE_CRAWL","WebCrawls","onError","err","log","webCrawlList","startCrawlAction","useCallback","Paper","colSpan","webCrawlStatus","FILE_CRAWL_LIST","RUN_FILE_CRAWL","DELETE_FILE_CRAWL","FileCrawls","gqlRun","fileCrawlList","CrawlFilterItemView","props","filter","pattern","setPattern","accept","setType","hasChanges","setHashChanges","useEffect","b","display","mb","flexGrow","mr","placeholder","FormControl","InputLabel","Select","labelId","MenuItem","reject","onAdd","onSave","index","onDelete","RUN_WEB_CRAWL","WebCrawl","entryUrl","setEntryUrl","maxDepth","setMaxDepth","crawlName","setCrawlName","crawlList","setCrawlList","nextItemIndex","setNextItemIndex","settings","onCompleted","gqlRunWebCrawl","onRun","itemToSave","newList","itemToDelete","justify","Typography","align","noValidate","autoComplete","required","defaultValue","newItem","FileCrawl","Crawls","FILE_CRAWLS","View","apolloClient","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","store","ApolloProvider","client","m","flexDirection","height","marginBottom","document","getElementById"],"mappings":"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","file":"static/js/main.070deb9c.chunk.js","sourcesContent":["/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {createStore} from \"redux\";\n\nexport const STATE_KEY = \"opensearchserver:state\";\n\nexport enum Views {\n    INDICES,\n    CRAWLS,\n    QUERIES,\n    GRAPHQL,\n    SCHEMA,\n}\n\nexport enum CrawlsViews {\n    WEB_CRAWLS,\n    WEB_CRAWL,\n    FILE_CRAWLS,\n    FILE_CRAWL\n}\n\nexport interface State {\n    view: Views,\n    crawlsView: CrawlsViews,\n    selectedIndex: string | undefined,\n    selectedWebCrawl: string | undefined,\n    selectedFileCrawl: string | undefined,\n}\n\nconst defaultState: State = {\n    view: Views.INDICES,\n    crawlsView: CrawlsViews.WEB_CRAWLS,\n    selectedIndex: undefined,\n    selectedWebCrawl: undefined,\n    selectedFileCrawl: undefined\n}\n\nenum ActionTypes {\n    SET_VIEW,\n    SET_CRAWLS_VIEW,\n    EDIT_SCHEMA,\n    EDIT_WEB_CRAWL,\n    EDIT_FILE_CRAWL\n}\n\ninterface SetViewAction {\n    type: ActionTypes.SET_VIEW;\n    view: Views;\n}\n\ninterface SetCrawlsViewAction {\n    type: ActionTypes.SET_CRAWLS_VIEW;\n    crawlsView: CrawlsViews;\n}\n\ninterface EditSchemaAction {\n    type: ActionTypes.EDIT_SCHEMA;\n    selectedIndex: string;\n}\n\ninterface EditWebCrawlAction {\n    type: ActionTypes.EDIT_WEB_CRAWL;\n    selectedCrawl: string;\n}\n\ninterface EditFileCrawlAction {\n    type: ActionTypes.EDIT_FILE_CRAWL;\n    selectedCrawl: string;\n}\n\ntype Actions = SetViewAction | SetCrawlsViewAction | EditSchemaAction | EditWebCrawlAction | EditFileCrawlAction;\n\nexport const setView = (view: Views): SetViewAction => {\n    return {type: ActionTypes.SET_VIEW, view};\n};\n\nexport const setCrawlsView = (crawlsView: CrawlsViews): SetCrawlsViewAction => {\n    return {type: ActionTypes.SET_CRAWLS_VIEW, crawlsView};\n};\n\nexport const editSchema = (selectedIndex: string): EditSchemaAction => {\n    return {type: ActionTypes.EDIT_SCHEMA, selectedIndex};\n};\n\nexport const editWebCrawl = (selectedCrawl: string): EditWebCrawlAction => {\n    return {type: ActionTypes.EDIT_WEB_CRAWL, selectedCrawl};\n};\n\nexport const editFileCrawl = (selectedCrawl: string): EditFileCrawlAction => {\n    return {type: ActionTypes.EDIT_FILE_CRAWL, selectedCrawl};\n};\n\nconst reducer = (state: State = defaultState, action: Actions): State => {\n    switch (action.type) {\n        case ActionTypes.SET_VIEW:\n            state = {...state, view: action.view};\n            break;\n        case ActionTypes.SET_CRAWLS_VIEW:\n            state = {...state, view: Views.CRAWLS, crawlsView: action.crawlsView};\n            break;\n        case ActionTypes.EDIT_SCHEMA:\n            state = {...state, selectedIndex: action.selectedIndex, view: Views.SCHEMA};\n            break;\n        case ActionTypes.EDIT_WEB_CRAWL:\n            state = {\n                ...state,\n                selectedWebCrawl: action.selectedCrawl,\n                view: Views.CRAWLS,\n                crawlsView: CrawlsViews.WEB_CRAWL\n            };\n            break;\n        case ActionTypes.EDIT_FILE_CRAWL:\n            state = {\n                ...state,\n                selectedFileCrawl: action.selectedCrawl,\n                view: Views.CRAWLS,\n                crawlsView: CrawlsViews.FILE_CRAWL\n            };\n            break;\n        default:\n            return state;\n    }\n    window.localStorage.setItem(STATE_KEY, JSON.stringify(state));\n    return state;\n}\n\n// Store creation\nconst storageState = window.localStorage.getItem(STATE_KEY);\nconst initialState: State = storageState ? JSON.parse(storageState) : defaultState;\n\nexport default createStore(reducer, initialState)\n\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport enum CrawlFilterType {\n  accept,\n  reject\n}\n\nexport interface CrawlFilterItem {\n  index?: number,\n  pattern?: string;\n  type: CrawlFilterType\n}\n","export default __webpack_public_path__ + \"static/media/oss_logo.40a9f4cc.png\";","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport AppBar from '@material-ui/core/AppBar';\nimport * as React from 'react';\nimport {Tab, Tabs, Toolbar} from \"@material-ui/core\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport oss_logo from \"./media/oss_logo.png\";\n\nconst Navbar = () => {\n  const view = useSelector<State>(state => state.view)\n  const dispatch = useDispatch();\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: Views) => {\n    dispatch(setView(newValue))\n  };\n\n  return (\n    <AppBar position=\"static\" color={\"transparent\"}>\n      <Toolbar>\n        <img src={oss_logo} alt=\"OpenSearchServer Logo\" style={{maxHeight: \"48px\", width: \"auto\"}}/>\n        <Tabs value={view} onChange={handleChange} aria-label=\"Main tab navigation\">\n          <Tab label=\"Indices\" value={Views.INDICES}/>\n          <Tab label=\"Crawls\" value={Views.CRAWLS}/>\n          <Tab label=\"Queries\" value={Views.QUERIES}/>\n          <Tab label=\"GraphQL\" value={Views.GRAPHQL}/>\n        </Tabs>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n\nexport default Navbar;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport const GRAPHQL_ENDPOINT = \"http://localhost:9090/graphql\";\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport {GRAPHQL_ENDPOINT} from \"./constants\";\n\nconst Gql = () => {\n  return (\n    <GraphiQL\n      fetcher={async graphQLParams => {\n        const data = await fetch(\n          GRAPHQL_ENDPOINT,\n          {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(graphQLParams),\n            credentials: 'same-origin',\n          },\n        );\n        return data.json().catch(() => data.text());\n      }}\n    />);\n}\n\nexport default Gql;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {editSchema} from \"./store\";\n\nconst INDEX_LIST = gql`\n  query IndexList($keywords: String, $start: Int, $rows: Int) {\n    indexList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      id\n    }\n  }\n`;\n\nconst CREATE_INDEX = gql`\n  mutation Createindex($name: String!) {\n    createIndex(name: $name)\n  }\n`\nconst DELETE_INDEX = gql`\n  mutation Deleteindex($name: String!) {\n    deleteIndex(name: $name)\n  }\n`\n\ninterface Index {\n  id: string;\n  name: string;\n}\n\ninterface IndexData {\n  indexList: Index[];\n}\n\nconst Indices = () => {\n  const dispatch = useDispatch();\n  const [keywords, setKeywords] = useState<String>('');\n  const [start, setStart] = useState<Number>(0);\n  const [rows, setRows] = useState<Number>(1000);\n  const {loading, error, data, refetch} = useQuery<IndexData>(INDEX_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\"\n  });\n  const [gqlCreate, {loading: loadingCreate, error: errorCreate}] = useMutation(CREATE_INDEX, {\n    variables: {name: keywords}\n  });\n  const [gqlDelete, {loading: loadingDelete, error: errorDelete}] = useMutation(DELETE_INDEX, {\n    variables: {name: keywords}\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL INDEX_LIST error: \", error);\n  }\n  return (\n    <>\n      <Box p={2}>\n        <Grid container spacing={1} alignItems={\"flex-end\"}>\n          <Grid item xs>\n            <TextField label=\"Index name\" value={keywords} size={\"small\"} fullWidth={true}\n                       onChange={e => setKeywords(e.target.value)}/>\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            {loadingCreate || loading && <CircularProgress size={30}/>}\n            {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            <Button disabled={!keywords || keywords.length == 0 || !data || data.indexList.length > 0}\n                    fullWidth={true} size={\"small\"}\n                    variant=\"contained\" onClick={() => gqlCreate().then(() => refetch())}\n                    color=\"primary\">Create index\n            </Button>\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            <Button disabled={!data || data.indexList.length != 1 || data.indexList[0].name != keywords}\n                    fullWidth={true} size={\"small\"}\n                    variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                    color=\"secondary\">Delete index\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <TableContainer component={Box}>\n        <Table size={\"small\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Uuid</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data?.indexList.map((item) => (\n              <TableRow key={item.id} onClick={() => {\n                dispatch(editSchema(item.name))\n              }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell>{item.id}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default Indices;\n","/*\n * Copyright 2017-2018 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport {Button} from \"@material-ui/core\";\n\nconst Schema = () => {\n  const selectedIndex = useSelector<State>(state => state.selectedIndex)\n  const dispatch = useDispatch();\n\n  return (<div>\n    Edit Schema ? {selectedIndex}\n    <Button onClick={() => dispatch(setView(Views.INDICES))}>Back</Button>\n  </div>)\n}\n\nexport default Schema;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useCallback, useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {editSchema, editWebCrawl} from \"./store\";\n\nconst CRAWL_LIST = gql`\n  query WebCrawlList($keywords: String, $start: Int, $rows: Int) {\n    webCrawlList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      status {\n        aborting\n        abortingReason\n        crawled\n        rejected\n        redirect\n        error\n        lastError\n        currentCrawl\n        currentDepth\n        startTime\n        endTime\n      }\n    }\n  }\n`;\n\nconst RUN_CRAWL = gql`\n  mutation RunWebCrawl($name: String!, $settings: WebCrawlSettings!) {\n    runWebCrawl(name: $name, settings: $settings) {\n      name\n    }\n  }\n`\n\nconst STOP_CRAWL = gql`\n  mutation StopWebCrawl($name: String!, $reason: String) {\n    stopWebCrawl(name: $name, aborting_reason: $reason)\n  }\n`\n\nconst DELETE_CRAWL = gql`\n  mutation DeleteWebCrawl($name: String!) {\n    deleteWebCrawl(name: $name)\n  }\n`\n\ninterface WebCrawlStatus {\n  name: string\n}\n\ninterface WebCrawlData {\n  webCrawlList: WebCrawlStatus[];\n}\n\nconst WebCrawls = () => {\n  const dispatch = useDispatch();\n  const [keywords, setKeywords] = useState<string>('');\n  const [start, setStart] = useState<number>(0);\n  const [rows, setRows] = useState<number>(20);\n  const {loading, error, data, refetch} = useQuery<WebCrawlData>(CRAWL_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\",\n  });\n  const [gqlRun, {loading: loadingCreate}] = useMutation(RUN_CRAWL, {\n    variables: {name: keywords}\n  });\n  const [gqlDelete, {loading: loadingDelete}] = useMutation(DELETE_CRAWL, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL CRAWL_LIST error: \", error);\n  }\n\n  console.log(\"data.webCrawlList\", data?.webCrawlList);\n\n  const startCrawlAction = useCallback(() => {\n    dispatch(editWebCrawl(keywords));\n  }, [keywords]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={2}>\n              <Grid container spacing={1} alignItems={\"flex-end\"}>\n                <Grid item xs>\n                  <TextField label=\"Web crawl name\" value={keywords} size={\"small\"} fullWidth={true}\n                             onChange={(e) => setKeywords(e.target.value)}/>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  {loadingCreate || loading && <CircularProgress size={30}/>}\n                  {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!keywords || keywords.length == 0 || !data || data.webCrawlList.length > 0}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={startCrawlAction}\n                          color=\"primary\">Create crawl\n                  </Button>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!data || data.webCrawlList.length != 1 || data.webCrawlList[0].name != keywords}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                          color=\"secondary\">Delete crawl\n                  </Button>\n                </Grid>\n              </Grid>\n            </TableCell>\n          </TableRow>\n          {data && data.webCrawlList && data.webCrawlList.length > 0 && <TableRow>\n            <TableCell>Name</TableCell>\n          </TableRow>}\n        </TableHead>\n        <TableBody>\n          {data?.webCrawlList.map((webCrawlStatus) => (\n            <TableRow key={webCrawlStatus.name} onClick={() => {\n              dispatch(editSchema(webCrawlStatus.name))\n            }}>\n              <TableCell component=\"th\" scope=\"row\">\n                {webCrawlStatus.name}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default WebCrawls;\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {editSchema} from \"./store\";\n\nconst FILE_CRAWL_LIST = gql`\n  query FileCrawlList($keywords: String, $start: Int, $rows: Int) {\n    fileCrawlList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      status {\n        aborting\n        abortingReason\n        crawled\n        rejected\n        redirect\n        error\n        lastError\n        currentCrawl\n        currentDepth\n        startTime\n        endTime\n      }\n    }\n  }\n`;\n\nconst RUN_FILE_CRAWL = gql`\n  mutation RunFileCrawl($name: String!, $settings: FileCrawlSettings!) {\n    runFileCrawl(name: $name, settings: $settings) {\n      name\n    }\n  }\n`\nconst DELETE_FILE_CRAWL = gql`\n  mutation DeleteFileCrawl($name: String!) {\n    deleteFileCrawl(name: $name)\n  }\n`\n\ninterface FileCrawlData {\n  fileCrawlList: string[];\n}\n\nconst FileCrawls = () => {\n  const dispatch = useDispatch();\n  const [keywords, setKeywords] = useState<String>('');\n  const [start, setStart] = useState<Number>(0);\n  const [rows, setRows] = useState<Number>(1000);\n  const {loading, error, data, refetch} = useQuery<FileCrawlData>(FILE_CRAWL_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\"\n  });\n  const [gqlRun, {loading: loadingCreate, error: errorCreate}] = useMutation(RUN_FILE_CRAWL, {\n    variables: {name: keywords}\n  });\n  const [gqlDelete, {loading: loadingDelete, error: errorDelete}] = useMutation(DELETE_FILE_CRAWL, {\n    variables: {name: keywords}\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL FILE_CRAWL_LIST error: \", error);\n  }\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table size={\"small\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell colSpan={2}>\n                <Grid container spacing={1} alignItems={\"flex-end\"}>\n                  <Grid item xs>\n                    <TextField label=\"File crawl name\" value={keywords} size={\"small\"} fullWidth={true}\n                               onChange={(e) => setKeywords(e.target.value)}/>\n                  </Grid>\n                  <Grid item xs={\"auto\"}>\n                    {loadingCreate || loading && <CircularProgress size={30}/>}\n                    {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n                  </Grid>\n                  <Grid item xs={\"auto\"}>\n                    <Button disabled={!keywords || keywords.length == 0 || !data || data.fileCrawlList.length > 0}\n                            fullWidth={true} size={\"small\"}\n                            variant=\"contained\" onClick={() => gqlRun().then(() => refetch())}\n                            color=\"primary\">Create crawl\n                    </Button>\n                  </Grid>\n                  <Grid item xs={\"auto\"}>\n                    <Button disabled={!data || data.fileCrawlList.length != 1 || data.fileCrawlList[0] != keywords}\n                            fullWidth={true} size={\"small\"}\n                            variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                            color=\"secondary\">Delete crawl\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Name</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data?.fileCrawlList.map((name) => (\n              <TableRow key={name} onClick={() => {\n                dispatch(editSchema(name))\n              }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {name}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default FileCrawls;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {Box, Button, FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\n\nimport {CrawlFilterItem, CrawlFilterType} from \"../types\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  disabled: boolean,\n  filter?: CrawlFilterItem,\n  onAdd?: (item: CrawlFilterItem) => void,\n  onSave?: (item: CrawlFilterItem) => void,\n  onDelete?: (item: CrawlFilterItem) => void\n}\n\nconst CrawlFilterItemView = (props: Props) => {\n\n    const [pattern, setPattern] = useState<string>(props.filter?.pattern || '');\n    const [type, setType] = useState<CrawlFilterType>((props.filter?.type) || CrawlFilterType.accept);\n    const [hasChanges, setHashChanges] = useState<boolean>(false);\n\n    const onAdd = () => {\n      if (props.onAdd) {\n        props.onAdd({pattern: pattern, type: type})\n      }\n    }\n\n    const onSave = () => {\n      if (props.filter && props.onSave) {\n        props.onSave({pattern: pattern, type: type, index: props.filter.index});\n      }\n    }\n\n    const onDelete = () => {\n      if (props.filter && props.onDelete) {\n        props.onDelete(props.filter);\n      }\n    }\n\n    useEffect(() => {\n      const b = pattern !== props.filter?.pattern || type !== props.filter?.type;\n      setHashChanges(b);\n    }, [props.filter, pattern, type])\n\n    return (\n      <Box display={\"flex\"} mb={2}>\n        <Box flexGrow={1} mr={2}>\n          <TextField id=\"filter\" label=\"Wildcard filter\" fullWidth={true}\n                     value={pattern}\n                     disabled={props.disabled}\n                     onChange={e => setPattern(e.target.value)}\n                     placeholder={\"https://www.opensearchserver.com/*\"}/>\n        </Box>\n        <Box mr={2}>\n          <FormControl>\n            <InputLabel id=\"policy-label\">Policy</InputLabel>\n            <Select labelId=\"policy-label\" id=\"policy\" value={type}\n                    disabled={props.disabled}\n                    onChange={e => setType(e.target.value as CrawlFilterType)}>\n              <MenuItem value={CrawlFilterType.accept}>Accept</MenuItem>\n              <MenuItem value={CrawlFilterType.reject}>Reject</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        <Box mr={2} display={\"flex\"} alignItems={\"flex-end\"}>\n          {!props.filter &&\n          <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} disabled={!pattern.length || props.disabled}\n                  onClick={onAdd}>Add\n          </Button>\n          }\n          {props.filter && <>\n            <Box mr={1}>\n              <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} disabled={!hasChanges || props.disabled}\n                      onClick={onSave}>Save\n              </Button>\n            </Box>\n            <Button size={\"small\"} variant={\"contained\"} color={\"secondary\"}\n                    disabled={props.disabled}\n                    onClick={onDelete}>Delete\n            </Button>\n          </>\n          }\n        </Box>\n      </Box>\n    )\n  }\n;\n\nexport default CrawlFilterItemView;\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport CrawlFilterItemView from \"./components/CrawlFilterItemView\";\nimport {useEffect, useState} from \"react\";\nimport {CrawlFilterItem} from \"./types\";\nimport {useMutation} from \"@apollo/client\";\nimport {gql} from \"@apollo/client/core\";\n\nconst RUN_WEB_CRAWL = gql`\n  mutation RunWebCrawl($name: String!, $settings: WebCrawlSettings!) {\n    runWebCrawl(name: $name, settings: $settings) {name}\n  }\n`\n\nconst WebCrawl = () => {\n  const selectedWebCrawl = useSelector((state: State) => state.selectedWebCrawl)\n  const dispatch = useDispatch();\n  const [entryUrl, setEntryUrl] = useState<string>('');\n  const [maxDepth, setMaxDepth] = useState<number | undefined>(undefined);\n  const [crawlName, setCrawlName] = useState<string>(selectedWebCrawl || '');\n  const [crawlList, setCrawlList] = useState<CrawlFilterItem[]>([]);\n  const [nextItemIndex, setNextItemIndex] = useState<number>(1);\n\n  const [gqlRunWebCrawl, {loading}] = useMutation(RUN_WEB_CRAWL, {\n    variables: {name: crawlName, settings: {entryUrl: entryUrl, maxDepth: maxDepth}},\n    onCompleted: data => {\n      alert(data);\n      console.log(data);\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n\n  const onCancel = () => {\n    dispatch(setCrawlsView(CrawlsViews.WEB_CRAWLS));\n  }\n\n  const onRun = async () => {\n    await gqlRunWebCrawl();\n  }\n\n  const onAdd = (item: CrawlFilterItem) => {\n    const newItem = {...item, index: nextItemIndex};\n    setNextItemIndex(nextItemIndex + 1);\n    const newList = [...crawlList, newItem];\n    setCrawlList(newList);\n  }\n\n  const onSave = (itemToSave: CrawlFilterItem) => {\n    const newList = crawlList.map(item => item.index === itemToSave.index ? itemToSave : item);\n    setCrawlList(newList);\n  }\n\n  const onDelete = (itemToDelete: CrawlFilterItem) => {\n    const newList = crawlList.filter(item => item.index !== itemToDelete.index);\n    setCrawlList(newList);\n  }\n\n  return (\n    <Box p={1}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify={\"space-between\"} spacing={10}>\n            <Grid item>\n              <Typography align={\"right\"} variant={\"h5\"}>Start a new crawl</Typography>\n            </Grid>\n            <Grid item>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"secondary\"}\n                          onClick={onCancel}>Cancel</Button>\n                </Grid>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"primary\"}\n                          onClick={onRun}>Run</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <form noValidate autoComplete=\"off\">\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField fullWidth required id=\"name\" label=\"Name\" value={crawlName}\n                           disabled={loading}\n                           onChange={e => setCrawlName(e.target.value)}\n                           defaultValue={crawlName} placeholder={selectedWebCrawl || 'Crawl name'}/>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField fullWidth required id=\"entryUrl\" label=\"Entry URL\" value={entryUrl}\n                           disabled={loading}\n                           onChange={e => setEntryUrl(e.target.value)}\n                           placeholder={\"https://www.opensearchserver.com\"}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth id=\"max_depth\" label=\"Max depth\" type={\"number\"}\n                           disabled={loading}\n                           value={maxDepth} onChange={e => setMaxDepth(+e.target.value)}\n                           placeholder={\"1\"}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth id=\"max_number_url\" label=\"Max number of URL\" type={\"number\"}\n                           disabled={loading}\n                           placeholder={\"1000\"}/>\n              </Grid>\n              <Grid item xs={12}>\n                <CrawlFilterItemView onAdd={onAdd} disabled={loading}/>\n                {crawlList.map((item) =>\n                  <CrawlFilterItemView disabled={loading} key={item.index} filter={item} onSave={onSave}\n                                       onDelete={onDelete}/>)}\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default WebCrawl;\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport {Button} from \"@material-ui/core\";\n\nconst FileCrawl = () => {\n  const selectedCrawl = useSelector<State>(state => state.selectedFileCrawl)\n  const dispatch = useDispatch();\n\n  return (<div>\n    Edit crawl? {selectedCrawl}\n    <Button onClick={() => dispatch(setView(Views.CRAWLS))}>Back</Button>\n  </div>)\n}\n\nexport default FileCrawl;\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {AppBar, Box, Tab, Tabs} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport WebCrawls from \"./WebCrawls\";\nimport FileCrawls from \"./FileCrawls\";\nimport WebCrawl from \"./WebCrawl\";\nimport FileCrawl from \"./FileCrawl\";\n\nconst Crawls = () => {\n  const dispatch = useDispatch();\n  const crawlsView = useSelector<State>(state => state.crawlsView);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setCrawlsView(newValue))\n  };\n\n  console.log(\"crawlsview\", crawlsView);\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Tabs value={crawlsView} onChange={handleChange} aria-label=\"Crawls tabs\">\n          <Tab label=\"Web Crawls\" value={CrawlsViews.WEB_CRAWLS}/>\n          <Tab label=\"File Crawls\" value={CrawlsViews.FILE_CRAWLS}/>\n        </Tabs>\n      </AppBar>\n      {crawlsView === CrawlsViews.WEB_CRAWLS && <WebCrawls/>}\n      {crawlsView === CrawlsViews.FILE_CRAWLS && <FileCrawls/>}\n      {crawlsView === CrawlsViews.WEB_CRAWL && <WebCrawl/>}\n      {crawlsView === CrawlsViews.FILE_CRAWL && <FileCrawl/>}\n    </div>\n  )\n}\n\nexport default Crawls;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider, useSelector} from \"react-redux\";\nimport store, {State, Views} from \"./store\";\nimport Navbar from \"./Navbar\";\nimport Gql from \"./Gql\";\nimport Indices from \"./Indices\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\nimport {GRAPHQL_ENDPOINT} from \"./constants\";\nimport Schema from \"./Schema\";\nimport Crawls from \"./Crawls\";\nimport {Box} from \"@material-ui/core\";\n\nconst View = () => {\n  const view = useSelector<State>(state => state.view)\n  switch (view) {\n    case Views.INDICES:\n      return (\n        <Indices/>\n      );\n    case Views.CRAWLS:\n      return (\n        <Crawls/>\n      );\n    case Views.QUERIES:\n      return (\n        <div>QUERIES</div>\n      );\n    case Views.GRAPHQL:\n      return (\n        <Gql/>\n      );\n    case Views.SCHEMA:\n      return (\n        <Schema/>\n      );\n    default:\n      return null;\n  }\n}\n\nconst apolloClient = new ApolloClient({\n  uri: GRAPHQL_ENDPOINT,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={apolloClient}>\n        <Box m={0} display={\"flex\"} flexDirection={\"column\"} height={\"100vh\"}>\n          <Box m={0} marginBottom={1}>\n            <Navbar/>\n          </Box>\n          <Box m={0} p={0} height={\"100vh\"}>\n            <View/>\n          </Box>\n        </Box>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}