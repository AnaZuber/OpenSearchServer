{"version":3,"sources":["store.ts","types.ts","media/oss_logo.png","Navbar.tsx","constants.ts","Gql.tsx","Indices.tsx","Schema.tsx","WebCrawlRow.tsx","WebCrawls.tsx","FileCrawls.tsx","components/CrawlFilterStatus.tsx","components/CrawlFilterItemView.tsx","WebCrawlEdit.tsx","Crawls.tsx","FileCrawl.tsx","index.tsx"],"names":["Views","CrawlsViews","STATE_KEY","ActionTypes","defaultState","view","INDICES","crawlsView","WEB_CRAWLS","selectedIndex","undefined","editWebCrawl","selectedFileCrawl","CrawlFilterStatus","setView","type","SET_VIEW","setCrawlsView","SET_CRAWLS_VIEW","crawlName","indexName","settings","EDIT_WEB_CRAWL","storageState","window","localStorage","getItem","initialState","JSON","parse","createStore","state","action","CRAWLS","EDIT_SCHEMA","SCHEMA","EDIT_FILE_CRAWL","selectedCrawl","FILE_CRAWLS","setItem","stringify","Navbar","useSelector","dispatch","useDispatch","AppBar","position","color","Toolbar","src","oss_logo","alt","style","maxHeight","width","Tabs","value","onChange","event","newValue","aria-label","Tab","label","QUERIES","GRAPHQL","GRAPHQL_ENDPOINT","Gql","fetcher","graphQLParams","a","fetch","method","headers","Accept","body","credentials","data","json","catch","text","INDEX_LIST","gql","CREATE_INDEX","DELETE_INDEX","Indices","useState","keywords","setKeywords","start","rows","useQuery","variables","fetchPolicy","loading","error","refetch","useMutation","name","onError","err","alert","console","gqlCreate","loadingCreate","gqlDelete","loadingDelete","message","Box","p","Grid","container","spacing","alignItems","item","xs","TextField","size","fullWidth","e","target","CircularProgress","Button","disabled","length","indexList","variant","onClick","then","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","map","scope","id","Schema","RUN_WEB_CRAWL","ABORT_WEB_CRAWL","GET_WEB_CRAWL","WebCrawlRow","completionCallback","onCompleted","gqlRun","gqlAbort","useLazyQuery","log","getWebCrawl","index","gqlGetCrawl","status","abortingReason","setAbortingReason","runCrawlAction","useCallback","abortCrawlAction","reason","toDateTime","timeMs","Date","toLocaleString","disableAbort","running","aborting","disableRun","endTime","startTime","crawled","rejected","display","mr","flexGrow","WEB_CRAWL_LIST","DELETE_WEB_CRAWL","WebCrawls","pollInterval","editCrawlAction","Paper","colSpan","webCrawlList","FILE_CRAWL_LIST","ABORT_FILE_CRAWL","DELETE_FILE_CRAWL","FileCrawlRow","stopCallback","disableStop","FileCrawls","startCrawlAction","fileCrawlList","CrawlFilterStatusOption","setStatus","title","isDefault","FormControl","InputLabel","Select","labelId","MenuItem","accept","reject","CrawlFilterItemView","props","filter","pattern","setPattern","hasChanges","setHashChanges","useEffect","b","mb","placeholder","onAdd","onSave","onDelete","UPSERT_WEB_CRAWL","buildCrawlFilterList","crawlFiltersWithIndex","list","crawlFilterWithIndex","push","WebCrawlEdit","setIndexName","entryUrl","setEntryUrl","maxDepth","setMaxDepth","setCrawlName","filterPolicy","crawlFilterPolicy","setCrawlFilterPolicy","filters","crawlFilterList","setCrawlFilterList","crawlFilters","sequenceNumber","crawlFilter","newItem","buildListwithIndex","crawlFilterListWithIndex","trace","gqlUpsertWebCrawl","onUpsert","itemToSave","itemToUpdate","find","indexToDelete","newList","justify","Typography","align","noValidate","autoComplete","required","Crawls","View","apolloClient","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","store","ApolloProvider","client","m","flexDirection","height","marginBottom","document","getElementById"],"mappings":"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","file":"static/js/main.c92dc3a3.chunk.js","sourcesContent":["/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {createStore} from \"redux\";\nimport {WebCrawlSettings} from \"./types\";\n\nexport const STATE_KEY = \"opensearchserver:state\";\n\nexport enum Views {\n  INDICES,\n  CRAWLS,\n  QUERIES,\n  GRAPHQL,\n  SCHEMA,\n}\n\nexport enum CrawlsViews {\n  WEB_CRAWLS,\n  FILE_CRAWLS,\n}\n\nexport interface State {\n  view: Views,\n  crawlsView: CrawlsViews,\n  selectedIndex: string | undefined,\n  editWebCrawl: {\n    crawlName: string,\n    indexName: string | undefined,\n    settings: WebCrawlSettings | undefined\n  } | undefined,\n  selectedFileCrawl: string | undefined,\n}\n\nconst defaultState: State = {\n  view: Views.INDICES,\n  crawlsView: CrawlsViews.WEB_CRAWLS,\n  selectedIndex: undefined,\n  editWebCrawl: undefined,\n  selectedFileCrawl: undefined\n}\n\nenum ActionTypes {\n  SET_VIEW,\n  SET_CRAWLS_VIEW,\n  EDIT_SCHEMA,\n  EDIT_WEB_CRAWL,\n  EDIT_FILE_CRAWL\n}\n\ninterface SetViewAction {\n  type: ActionTypes.SET_VIEW;\n  view: Views;\n}\n\ninterface SetCrawlsViewAction {\n  type: ActionTypes.SET_CRAWLS_VIEW;\n  crawlsView: CrawlsViews;\n}\n\ninterface EditSchemaAction {\n  type: ActionTypes.EDIT_SCHEMA;\n  selectedIndex: string;\n}\n\ninterface EditWebCrawlAction {\n  type: ActionTypes.EDIT_WEB_CRAWL;\n  crawlName: string;\n  indexName?: string;\n  settings?: WebCrawlSettings;\n}\n\ninterface EditFileCrawlAction {\n  type: ActionTypes.EDIT_FILE_CRAWL;\n  selectedCrawl: string;\n}\n\ntype Actions = SetViewAction | SetCrawlsViewAction | EditSchemaAction | EditWebCrawlAction | EditFileCrawlAction;\n\nexport const setView = (view: Views): SetViewAction => {\n  return {type: ActionTypes.SET_VIEW, view};\n};\n\nexport const setCrawlsView = (crawlsView: CrawlsViews): SetCrawlsViewAction => {\n  return {type: ActionTypes.SET_CRAWLS_VIEW, crawlsView};\n};\n\nexport const editSchema = (selectedIndex: string): EditSchemaAction => {\n  return {type: ActionTypes.EDIT_SCHEMA, selectedIndex};\n};\n\nexport const editWebCrawl = (crawlName: string, indexName?: string, settings?: WebCrawlSettings): EditWebCrawlAction => {\n  return {type: ActionTypes.EDIT_WEB_CRAWL, crawlName, indexName, settings};\n};\n\nexport const editFileCrawl = (selectedCrawl: string): EditFileCrawlAction => {\n  return {type: ActionTypes.EDIT_FILE_CRAWL, selectedCrawl};\n};\n\nconst reducer = (state: State = defaultState, action: Actions): State => {\n  switch (action.type) {\n    case ActionTypes.SET_VIEW:\n      state = {...state, view: action.view};\n      break;\n    case ActionTypes.SET_CRAWLS_VIEW:\n      state = {...state, view: Views.CRAWLS, crawlsView: action.crawlsView, editWebCrawl: undefined};\n      break;\n    case ActionTypes.EDIT_SCHEMA:\n      state = {\n        ...state,\n        selectedIndex: action.selectedIndex,\n        view: Views.SCHEMA\n      };\n      break;\n    case ActionTypes.EDIT_WEB_CRAWL:\n      state = {\n        ...state,\n        editWebCrawl: {crawlName: action.crawlName, indexName: action.indexName, settings: action.settings},\n        view: Views.CRAWLS,\n        crawlsView: CrawlsViews.WEB_CRAWLS\n      };\n      break;\n    case ActionTypes.EDIT_FILE_CRAWL:\n      state = {\n        ...state,\n        selectedFileCrawl: action.selectedCrawl,\n        view: Views.CRAWLS,\n        crawlsView: CrawlsViews.FILE_CRAWLS\n      };\n      break;\n    default:\n      return state;\n  }\n  window.localStorage.setItem(STATE_KEY, JSON.stringify(state));\n  return state;\n}\n\n// Store creation\nconst storageState = window.localStorage.getItem(STATE_KEY);\nconst initialState: State = storageState ? JSON.parse(storageState) : defaultState;\n\nexport default createStore(reducer, initialState)\n\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport enum CrawlFilterStatus {\n  accept = 'accept',\n  reject = 'reject'\n}\n\nexport interface CrawlFilterItem {\n  pattern?: string;\n  status: CrawlFilterStatus\n}\n\nexport interface WebCrawlSettings {\n  entryUrl: string\n  maxDepth?: number\n  filters?: CrawlFilterItem[]\n  filterPolicy?: CrawlFilterStatus\n}\n","export default __webpack_public_path__ + \"static/media/oss_logo.40a9f4cc.png\";","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport AppBar from '@material-ui/core/AppBar';\nimport * as React from 'react';\nimport {Tab, Tabs, Toolbar} from \"@material-ui/core\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport oss_logo from \"./media/oss_logo.png\";\n\nconst Navbar = () => {\n  const view = useSelector<State>(state => state.view)\n  const dispatch = useDispatch();\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: Views) => {\n    dispatch(setView(newValue))\n  };\n\n  return (\n    <AppBar position=\"static\" color={\"transparent\"}>\n      <Toolbar>\n        <img src={oss_logo} alt=\"OpenSearchServer Logo\" style={{maxHeight: \"48px\", width: \"auto\"}}/>\n        <Tabs value={view} onChange={handleChange} aria-label=\"Main tab navigation\">\n          <Tab label=\"Indices\" value={Views.INDICES}/>\n          <Tab label=\"Crawls\" value={Views.CRAWLS}/>\n          <Tab label=\"Queries\" value={Views.QUERIES}/>\n          <Tab label=\"GraphQL\" value={Views.GRAPHQL}/>\n        </Tabs>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n\nexport default Navbar;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport const GRAPHQL_ENDPOINT = \"http://localhost:9090/graphql\";\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport {GRAPHQL_ENDPOINT} from \"./constants\";\n\nconst Gql = () => {\n  return (\n    <GraphiQL\n      fetcher={async graphQLParams => {\n        const data = await fetch(\n          GRAPHQL_ENDPOINT,\n          {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(graphQLParams),\n            credentials: 'same-origin',\n          },\n        );\n        return data.json().catch(() => data.text());\n      }}\n    />);\n}\n\nexport default Gql;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button, CircularProgress,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {editSchema} from \"./store\";\n\nconst INDEX_LIST = gql`\n  query IndexList($keywords: String, $start: Int, $rows: Int) {\n    indexList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      id\n    }\n  }\n`;\n\nconst CREATE_INDEX = gql`\n  mutation Createindex($name: String!) {\n    createIndex(name: $name)\n  }\n`\nconst DELETE_INDEX = gql`\n  mutation Deleteindex($name: String!) {\n    deleteIndex(name: $name)\n  }\n`\n\ninterface Index {\n  id: string;\n  name: string;\n}\n\ninterface IndexData {\n  indexList: Index[];\n}\n\nconst Indices = () => {\n  const dispatch = useDispatch();\n  const [keywords, setKeywords] = useState<String>('');\n  const [start] = useState<Number>(0);\n  const [rows] = useState<Number>(1000);\n  const {loading, error, data, refetch} = useQuery<IndexData>(INDEX_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\"\n  });\n  const [gqlCreate, {loading: loadingCreate}] = useMutation(CREATE_INDEX, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlDelete, {loading: loadingDelete}] = useMutation(DELETE_INDEX, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL INDEX_LIST error: \", error);\n  }\n  return (\n    <>\n      <Box p={2}>\n        <Grid container spacing={1} alignItems={\"flex-end\"}>\n          <Grid item xs>\n            <TextField label=\"Index name\" value={keywords} size={\"small\"} fullWidth={true}\n                       onChange={e => setKeywords(e.target.value)}/>\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            {(loadingCreate || loading) && <CircularProgress size={30}/>}\n            {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            <Button disabled={!keywords || keywords.length === 0 || !data || data.indexList.length > 0}\n                    fullWidth={true} size={\"small\"}\n                    variant=\"contained\" onClick={() => gqlCreate().then(() => refetch())}\n                    color=\"primary\">Create index\n            </Button>\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            <Button disabled={!data || data.indexList.length !== 1 || data.indexList[0].name !== keywords}\n                    fullWidth={true} size={\"small\"}\n                    variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                    color=\"secondary\">Delete index\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <TableContainer component={Box}>\n        <Table size={\"small\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Uuid</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data?.indexList.map((item) => (\n              <TableRow key={item.id} onClick={() => {\n                dispatch(editSchema(item.name))\n              }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell>{item.id}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default Indices;\n","/*\n * Copyright 2017-2018 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport {Button} from \"@material-ui/core\";\n\nconst Schema = () => {\n  const selectedIndex = useSelector<State>(state => state.selectedIndex)\n  const dispatch = useDispatch();\n\n  return (<div>\n    Edit Schema ? {selectedIndex}\n    <Button onClick={() => dispatch(setView(Views.INDICES))}>Back</Button>\n  </div>)\n}\n\nexport default Schema;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {useDispatch} from \"react-redux\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {useCallback, useState} from \"react\";\nimport {editWebCrawl} from \"./store\";\nimport {Box, Button, TableCell, TableRow, TextField} from \"@material-ui/core\";\nimport {gql} from \"@apollo/client/core\";\nimport {WebCrawlSettings} from \"./types\";\n\nconst RUN_WEB_CRAWL = gql`\n  mutation RunWebCrawl($name: String!) {\n    runWebCrawl(name: $name) {\n      name\n    }\n  }\n`\nconst ABORT_WEB_CRAWL = gql`\n  mutation AbortWebCrawl($name: String!, $reason: String) {\n    abortWebCrawl(name: $name, aborting_reason: $reason)\n  }\n`\n\nconst GET_WEB_CRAWL = gql`\n  query GetWebCrawl($name: String!) {\n    getWebCrawl(name: $name) {\n      index\n      settings {\n        entryUrl\n        maxDepth\n        filters {\n          pattern\n          status\n        }\n        filterPolicy\n      }\n    }\n  }\n`\n\ninterface GetWebCrawl {\n  index?: string,\n  settings: WebCrawlSettings\n}\n\ninterface GetWebCrawlData {\n  getWebCrawl?: GetWebCrawl;\n}\n\nexport interface WebCrawlStatus {\n  startTime?: number\n  endTime?: number\n  crawled?: number\n  rejected?: number\n  error?: number\n  running?: boolean\n  aborting?: boolean\n  abortingReason?: string\n}\n\nexport interface WebCrawlNameStatus {\n  name: string\n  status: WebCrawlStatus\n}\n\nexport interface WebCrawlRowProps {\n  item: WebCrawlNameStatus\n  completionCallback: () => void\n}\n\nconst WebCrawlRow = ({item, completionCallback}: WebCrawlRowProps) => {\n  const dispatch = useDispatch();\n  const [gqlRun] = useMutation(RUN_WEB_CRAWL, {\n    onCompleted: data => {\n      completionCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlAbort] = useMutation(ABORT_WEB_CRAWL, {\n    onCompleted: data => {\n      completionCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlGetCrawl] = useLazyQuery<GetWebCrawlData>(GET_WEB_CRAWL, {\n    variables: {name: item.name},\n    fetchPolicy: 'no-cache',\n    onCompleted: data => {\n      console.log(\"gqlGetCrawl\", data);\n      if (!data.getWebCrawl) {\n        const err = \"The crawl does not exist: \" + item.name;\n        alert(err);\n        console.error(err);\n      } else {\n        dispatch(editWebCrawl(item.name, data.getWebCrawl.index, data.getWebCrawl.settings));\n      }\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [abortingReason, setAbortingReason] = useState<string>(item.status.abortingReason || '');\n\n  const runCrawlAction = useCallback(async () => {\n    await gqlRun({variables: {name: item.name}});\n  }, [gqlRun, item.name]);\n\n  const abortCrawlAction = useCallback(async () => {\n    await gqlAbort({variables: {name: item.name, reason: abortingReason}});\n  }, [gqlAbort, abortingReason, item.name]);\n\n  const editGetCrawlAction = () => {\n    console.log(\"editGetCrawlAction\");\n    gqlGetCrawl();\n  }\n\n  const toDateTime = (timeMs?: number): string | undefined => {\n    if (!timeMs)\n      return undefined;\n    const date = new Date(timeMs);\n    return date.toLocaleString();\n  };\n\n  const disableAbort = !item.status.running || item.status.aborting;\n  const disableRun = item.status.running;\n  const endTime = item.status.endTime ? toDateTime(item.status.endTime) : item.status.aborting ? 'Aborting...' : item.status.running ? 'Running...' : undefined;\n\n  return (\n    <TableRow key={item.name}>\n      <TableCell>\n        <Button size={\"small\"} variant={'outlined'} onClick={editGetCrawlAction}>\n          {item.name}\n        </Button>\n      </TableCell>\n      <TableCell>\n        {toDateTime(item.status.startTime)}\n      </TableCell>\n      <TableCell>\n        {endTime}\n      </TableCell>\n      <TableCell>\n        {item.status.crawled}\n      </TableCell>\n      <TableCell>\n        {item.status.rejected}\n      </TableCell>\n      <TableCell>\n        {item.status.error}\n      </TableCell>\n      <TableCell>\n        <Box display={\"flex\"} alignItems={\"flex-end\"}>\n          <Box mr={1} flexGrow={1}>\n            <TextField label=\"Aborting reason\" value={abortingReason} disabled={disableAbort}\n                       onChange={e => setAbortingReason(e.target.value)} size={\"small\"} fullWidth={true}/>\n          </Box>\n          <Box mr={1}>\n            <Button disabled={disableAbort} size={\"small\"}\n                    variant=\"contained\" onClick={abortCrawlAction} color=\"secondary\">Abort\n            </Button>\n          </Box>\n          <Button disabled={disableRun} size={\"small\"}\n                  variant=\"contained\" onClick={runCrawlAction} color=\"primary\">Run\n          </Button>\n        </Box>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default WebCrawlRow;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useCallback, useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {editWebCrawl, State} from \"./store\";\nimport WebCrawlRow, {WebCrawlNameStatus} from \"./WebCrawlRow\";\n\nconst WEB_CRAWL_LIST = gql`\n  query WebCrawlList($keywords: String, $start: Int, $rows: Int) {\n    webCrawlList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      status {\n        running\n        aborting\n        abortingReason\n        crawled\n        rejected\n        redirect\n        error\n        lastError\n        currentCrawl\n        currentDepth\n        startTime\n        endTime\n      }\n    }\n  }\n`;\n\nconst DELETE_WEB_CRAWL = gql`\n  mutation DeleteWebCrawl($name: String!) {\n    deleteWebCrawl(name: $name)\n  }\n`\n\ninterface WebCrawlData {\n  webCrawlList: WebCrawlNameStatus[];\n}\n\nconst WebCrawls = () => {\n  const dispatch = useDispatch();\n  const selectedIndex = useSelector((state: State) => state.selectedIndex);\n  const [keywords, setKeywords] = useState<string>('');\n  const [start] = useState<number>(0);\n  const [rows] = useState<number>(1000);\n  const {loading, error, data, refetch} = useQuery<WebCrawlData>(WEB_CRAWL_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\",\n    pollInterval: 10000\n  });\n  const [gqlDelete, {loading: loadingDelete}] = useMutation(DELETE_WEB_CRAWL, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL WEB_CRAWL_LIST error: \", error);\n  }\n\n  const editCrawlAction = useCallback(() => {\n    dispatch(editWebCrawl(keywords, selectedIndex, undefined));\n  }, [dispatch, selectedIndex, keywords]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={7}>\n              <Grid container spacing={1} alignItems={\"flex-end\"}>\n                <Grid item xs>\n                  <TextField label=\"Web crawl name\" value={keywords} size={\"small\"} fullWidth={true}\n                             onChange={(e) => setKeywords(e.target.value)}/>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  {loading && <CircularProgress size={30}/>}\n                  {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!keywords || keywords.length === 0 || !data || data.webCrawlList.length > 0}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={editCrawlAction}\n                          color=\"primary\">Create crawl\n                  </Button>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!data || data.webCrawlList.length !== 1 || data.webCrawlList[0].name !== keywords}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                          color=\"secondary\">Delete crawl\n                  </Button>\n                </Grid>\n              </Grid>\n            </TableCell>\n          </TableRow>\n          {data && data.webCrawlList && data.webCrawlList.length > 0 && <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Started</TableCell>\n            <TableCell>Ended</TableCell>\n            <TableCell>Crawled</TableCell>\n            <TableCell>Rejected</TableCell>\n            <TableCell>Error</TableCell>\n            <TableCell></TableCell>\n          </TableRow>}\n        </TableHead>\n        <TableBody>\n          {data?.webCrawlList.map((item) =>\n            <WebCrawlRow key={item.name} item={item} completionCallback={() => refetch()}/>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default WebCrawls;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useCallback, useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {editFileCrawl, editWebCrawl} from \"./store\";\n\nconst FILE_CRAWL_LIST = gql`\n  query FileCrawlList($keywords: String, $start: Int, $rows: Int) {\n    fileCrawlList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      status {\n        running\n        aborting\n        abortingReason\n        crawled\n        rejected\n        redirect\n        error\n        lastError\n        currentCrawl\n        currentDepth\n        startTime\n        endTime\n      }\n    }\n  }\n`;\n\nconst ABORT_FILE_CRAWL = gql`\n  mutation StopFileCrawl($name: String!, $reason: String) {\n    abortFileCrawl(name: $name, aborting_reason: $reason)\n  }\n`\n\nconst DELETE_FILE_CRAWL = gql`\n  mutation DeleteFileCrawl($name: String!) {\n    deleteFileCrawl(name: $name)\n  }\n`\n\ninterface FileCrawlStatus {\n  startTime?: number\n  endTime?: number\n  crawled?: number\n  rejected?: number\n  error?: number\n  running?: boolean\n  aborting?: boolean\n  abortingReason?: string\n}\n\ninterface FileCrawlNameStatus {\n  name: string\n  status: FileCrawlStatus\n}\n\ninterface FileCrawlData {\n  fileCrawlList: FileCrawlNameStatus[];\n}\n\ninterface FileCrawlRowProps {\n  item: FileCrawlNameStatus\n  stopCallback: () => void\n}\n\nconst FileCrawlRow = ({item, stopCallback}: FileCrawlRowProps) => {\n  const [gqlAbort, {loading: loadingStop}] = useMutation(ABORT_FILE_CRAWL, {\n    onCompleted: data => {\n      stopCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [abortingReason, setAbortingReason] = useState<string | undefined>(item.status.abortingReason);\n\n  const abortCrawlAction = useCallback(async () => {\n    await gqlAbort({variables: {name: item.name, reason: abortingReason}});\n  }, [abortingReason]);\n\n  const toDateTime = (timeMs?: number): string | undefined => {\n    if (!timeMs)\n      return undefined;\n    const date = new Date(timeMs);\n    return date.toLocaleString();\n  };\n\n  const disableStop = item.status.endTime ? true : item.status.aborting;\n  const endTime = item.status.endTime ? toDateTime(item.status.endTime) : item.status.aborting ? 'Aborting...' : undefined;\n\n  return (\n    <TableRow key={item.name}>\n      <TableCell>\n        {item.name}\n      </TableCell>\n      <TableCell>\n        {toDateTime(item.status.startTime)}\n      </TableCell>\n      <TableCell>\n        {endTime}\n      </TableCell>\n      <TableCell>\n        {item.status.crawled}\n      </TableCell>\n      <TableCell>\n        {item.status.rejected}\n      </TableCell>\n      <TableCell>\n        {item.status.error}\n      </TableCell>\n      <TableCell>\n        <Box display={\"flex\"} alignItems={\"flex-end\"}>\n          <Box mr={1} flexGrow={1}>\n            <TextField label=\"Aborting reason\" value={abortingReason} disabled={disableStop}\n                       onChange={e => setAbortingReason(e.target.value)} size={\"small\"} fullWidth={true}/>\n          </Box>\n          <Button disabled={disableStop} size={\"small\"}\n                  variant=\"contained\" onClick={abortCrawlAction} color=\"secondary\">Stop\n          </Button>\n        </Box>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst FileCrawls = () => {\n  const dispatch = useDispatch();\n  const [keywords, setKeywords] = useState<string>('');\n  const [start, setStart] = useState<number>(0);\n  const [rows, setRows] = useState<number>(1000);\n  const {loading, error, data, refetch} = useQuery<FileCrawlData>(FILE_CRAWL_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\",\n    pollInterval: 10000\n  });\n  const [gqlDelete, {loading: loadingDelete, error: errorDelete}] = useMutation(DELETE_FILE_CRAWL, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL FILE_CRAWL_LIST error: \", error);\n  }\n\n  const startCrawlAction = useCallback(() => {\n    dispatch(editFileCrawl(keywords));\n  }, [keywords]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={7}>\n              <Grid container spacing={1} alignItems={\"flex-end\"}>\n                <Grid item xs>\n                  <TextField label=\"File crawl name\" value={keywords} size={\"small\"} fullWidth={true}\n                             onChange={(e) => setKeywords(e.target.value)}/>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  {loading && <CircularProgress size={30}/>}\n                  {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!keywords || keywords.length === 0 || !data || data.fileCrawlList.length > 0}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={startCrawlAction}\n                          color=\"primary\">Create crawl\n                  </Button>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!data || data.fileCrawlList.length !== 1 || data.fileCrawlList[0].name !== keywords}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                          color=\"secondary\">Delete crawl\n                  </Button>\n                </Grid>\n              </Grid>\n            </TableCell>\n          </TableRow>\n          {data && data.fileCrawlList && data.fileCrawlList.length > 0 && <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Started</TableCell>\n            <TableCell>Ended</TableCell>\n            <TableCell>Crawled</TableCell>\n            <TableCell>Rejected</TableCell>\n            <TableCell>Error</TableCell>\n            <TableCell></TableCell>\n          </TableRow>}\n        </TableHead>\n        <TableBody>\n          {data?.fileCrawlList.map((item) =>\n            <FileCrawlRow item={item} stopCallback={() => refetch()}/>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default FileCrawls;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {CrawlFilterStatus} from \"../types\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\n\ninterface Props {\n  isDefault: boolean\n  disabled: boolean,\n  status: CrawlFilterStatus,\n  setStatus: (newStatus: CrawlFilterStatus) => void,\n}\n\nconst CrawlFilterStatusOption = ({disabled, status, setStatus, isDefault}: Props) => {\n\n  const title = isDefault ? 'Default policy' : 'Policy';\n\n  return (\n    <FormControl fullWidth={true}>\n      <InputLabel id=\"policy-label\">{title}</InputLabel>\n      <Select labelId=\"policy-label\" id=\"policy\" value={status}\n              disabled={disabled}\n              onChange={e => setStatus(e.target.value as CrawlFilterStatus)}>\n        <MenuItem value={CrawlFilterStatus.accept}>Accept</MenuItem>\n        <MenuItem value={CrawlFilterStatus.reject}>Reject</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default CrawlFilterStatusOption;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {Box, Button, TextField} from \"@material-ui/core\";\n\nimport {CrawlFilterItem, CrawlFilterStatus} from \"../types\";\nimport {useEffect, useState} from \"react\";\nimport CrawlFilterStatusOption from \"./CrawlFilterStatus\";\n\ninterface Props {\n  disabled: boolean,\n  index?: number,\n  filter?: CrawlFilterItem,\n  onAdd?: (item: CrawlFilterItem) => void,\n  onSave?: (item: CrawlFilterItem, index: number) => void,\n  onDelete?: (index: number) => void\n}\n\nconst CrawlFilterItemView = (props: Props) => {\n\n    const [pattern, setPattern] = useState<string>(props.filter?.pattern || '');\n    const [status, setStatus] = useState<CrawlFilterStatus>((props.filter?.status) || CrawlFilterStatus.accept);\n    const [hasChanges, setHashChanges] = useState<boolean>(false);\n\n    const onAdd = () => {\n      if (props.onAdd) {\n        props.onAdd({pattern: pattern, status: status})\n      }\n    }\n\n    const onSave = () => {\n      console.log(\"onSave props\", props);\n      if (props.onSave && props.index) {\n        props.onSave({pattern: pattern, status: status}, props.index);\n      }\n    }\n\n    const onDelete = () => {\n      if (props.onDelete && props.index) {\n        props.onDelete(props.index);\n      }\n    }\n\n    useEffect(() => {\n      const b = pattern !== props.filter?.pattern || status !== props.filter?.status;\n      setHashChanges(b);\n    }, [props.filter, pattern, status])\n\n    return (\n      <Box display={\"flex\"} mb={2}>\n        <Box flexGrow={1} mr={2}>\n          <TextField id=\"filter\" label=\"Wildcard filter\" fullWidth={true}\n                     value={pattern}\n                     disabled={props.disabled}\n                     onChange={e => setPattern(e.target.value)}\n                     placeholder={\"https://www.opensearchserver.com/*\"}/>\n        </Box>\n        <Box mr={2}>\n          <CrawlFilterStatusOption disabled={props.disabled} status={status} setStatus={setStatus} isDefault={false}/>\n        </Box>\n        <Box mr={2} display={\"flex\"} alignItems={\"flex-end\"}>\n          {!props.filter &&\n          <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} disabled={!pattern.length || props.disabled}\n                  onClick={onAdd}>Add\n          </Button>\n          }\n          {props.filter && <>\n            <Box mr={1}>\n              <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} disabled={!hasChanges || props.disabled}\n                      onClick={onSave}>Save\n              </Button>\n            </Box>\n            <Button size={\"small\"} variant={\"contained\"} color={\"secondary\"}\n                    disabled={props.disabled}\n                    onClick={onDelete}>Delete\n            </Button>\n          </>\n          }\n        </Box>\n      </Box>\n    )\n  }\n;\n\nexport default CrawlFilterItemView;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport CrawlFilterItemView from \"./components/CrawlFilterItemView\";\nimport {useState} from \"react\";\nimport {CrawlFilterItem, CrawlFilterStatus} from \"./types\";\nimport {useMutation} from \"@apollo/client\";\nimport {gql} from \"@apollo/client/core\";\nimport CrawlFilterStatusOption from \"./components/CrawlFilterStatus\";\n\nconst UPSERT_WEB_CRAWL = gql`\n  mutation UpsertWebCrawl($name: String!, $settings: WebCrawlSettingsInput!, $index: String!) {\n    upsertWebCrawl(name: $name, settings: $settings, index: $index) {name}\n  }\n`\n\ninterface CrawlFilterItemWithIndex {\n  index: number,\n  filter: CrawlFilterItem\n}\n\ninterface CrawlFilterListWithIndex {\n  sequenceNumber: number,\n  list: CrawlFilterItemWithIndex[]\n}\n\nconst buildListwithIndex = (crawlFilters?: CrawlFilterItem[]): CrawlFilterListWithIndex => {\n  const crawlFilterList: CrawlFilterListWithIndex = {sequenceNumber: 1, list: []};\n  if (crawlFilters) {\n    for (let crawlFilter of crawlFilters) {\n      delete (crawlFilter as any)['__typename']; //Remove Filter type, as the mutation expect a FilterInput\n      const newItem: CrawlFilterItemWithIndex = {index: crawlFilterList.sequenceNumber++, filter: crawlFilter};\n      crawlFilterList.list.push(newItem);\n    }\n  }\n  return crawlFilterList;\n}\n\nconst buildCrawlFilterList = (crawlFiltersWithIndex: CrawlFilterItemWithIndex[]): CrawlFilterItem[] => {\n  let list: CrawlFilterItem[] = [];\n  for (let crawlFilterWithIndex of crawlFiltersWithIndex) {\n    list.push(crawlFilterWithIndex.filter);\n  }\n  return list;\n}\n\nconst WebCrawlEdit = () => {\n  const dispatch = useDispatch();\n  const editWebCrawl = useSelector((state: State) => state.editWebCrawl)\n\n  const [indexName, setIndexName] = useState<string>(editWebCrawl?.indexName || '');\n  const [entryUrl, setEntryUrl] = useState<string>(editWebCrawl?.settings?.entryUrl || '');\n  const [maxDepth, setMaxDepth] = useState<number | undefined>(editWebCrawl?.settings?.maxDepth);\n  const [crawlName, setCrawlName] = useState<string>(editWebCrawl?.crawlName || '');\n  const [crawlFilterPolicy, setCrawlFilterPolicy] = useState<CrawlFilterStatus>((editWebCrawl?.settings?.filterPolicy) || CrawlFilterStatus.reject);\n  const [crawlFilterList, setCrawlFilterList] = useState<CrawlFilterItem[]>(editWebCrawl?.settings?.filters || []);\n  const [crawlFilterListWithIndex] = useState<CrawlFilterListWithIndex>(buildListwithIndex(editWebCrawl?.settings?.filters));\n\n  console.log(\"crawlFilterList\", crawlFilterList);\n\n  const [gqlUpsertWebCrawl, {loading}] = useMutation(UPSERT_WEB_CRAWL, {\n    variables: {\n      name: crawlName,\n      settings: {entryUrl: entryUrl, maxDepth: maxDepth, filters: crawlFilterList, filterPolicy: crawlFilterPolicy},\n      index: indexName\n    },\n    onCompleted: data => {\n      dispatch(setCrawlsView(CrawlsViews.WEB_CRAWLS));\n      console.trace(data);\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n\n  const onCancel = () => {\n    dispatch(setCrawlsView(CrawlsViews.WEB_CRAWLS));\n  }\n\n  const onUpsert = async () => {\n    await gqlUpsertWebCrawl();\n  }\n\n  const onAdd = (item: CrawlFilterItem) => {\n    const newItem: CrawlFilterItemWithIndex = {index: crawlFilterListWithIndex.sequenceNumber++, filter: item};\n    crawlFilterListWithIndex.list.push(newItem);\n    console.log(\"crawlFilterListWithIndex.list\", crawlFilterListWithIndex.list);\n    setCrawlFilterList(buildCrawlFilterList(crawlFilterListWithIndex.list));\n  }\n\n  const onSave = (itemToSave: CrawlFilterItem, index: number) => {\n    console.log(\"onSave\", index);\n    const itemToUpdate = crawlFilterListWithIndex.list.find(item => item.index === index);\n    if (itemToUpdate) {\n      itemToUpdate.filter = itemToSave;\n    }\n    setCrawlFilterList(buildCrawlFilterList(crawlFilterListWithIndex.list));\n  }\n\n  const onDelete = (indexToDelete: number) => {\n    const newList = crawlFilterListWithIndex.list.filter(item => item.index !== indexToDelete);\n    crawlFilterListWithIndex.list = newList;\n    setCrawlFilterList(buildCrawlFilterList(crawlFilterListWithIndex.list));\n  }\n\n  const isEdit = editWebCrawl?.settings !== undefined;\n  const title = isEdit ? \"Edit Crawl\" : \"New Crawl\";\n\n  return (\n    <Box p={1}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify={\"space-between\"} spacing={10}>\n            <Grid item>\n              <Typography align={\"right\"} variant={\"h5\"}>{title}</Typography>\n            </Grid>\n            <Grid item>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"secondary\"}\n                          onClick={onCancel}>Cancel</Button>\n                </Grid>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"primary\"}\n                          onClick={onUpsert}>Upsert</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <form noValidate autoComplete=\"off\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <TextField fullWidth\n                           required id=\"CrawlName\" label=\"Crawl Name\" value={crawlName}\n                           disabled={true}\n                           onChange={e => setCrawlName(e.target.value)}\n                           placeholder={editWebCrawl?.crawlName || 'Crawl name'}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth required id=\"IndexName\" label=\"Index Name\" value={indexName}\n                           disabled={loading}\n                           onChange={e => setIndexName(e.target.value)}\n                           placeholder={editWebCrawl?.indexName || 'Index name'}/>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField fullWidth required id=\"entryUrl\" label=\"Entry URL\" value={entryUrl}\n                           disabled={loading}\n                           onChange={e => setEntryUrl(e.target.value)}\n                           placeholder={\"https://www.opensearchserver.com\"}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth id=\"max_depth\" label=\"Max depth\" type={\"number\"}\n                           disabled={loading}\n                           value={maxDepth} onChange={e => setMaxDepth(+e.target.value)}\n                           placeholder={\"1\"}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth id=\"max_number_url\" label=\"Max number of URL\" type={\"number\"}\n                           disabled={loading}\n                           placeholder={\"1000\"}/>\n              </Grid>\n              <Grid item xs={10}>\n                <CrawlFilterItemView onAdd={onAdd} disabled={loading}/>\n                {crawlFilterListWithIndex.list.map((item) =>\n                  <CrawlFilterItemView disabled={loading} key={item.index} filter={item.filter}\n                                       index={item.index} onSave={onSave} onDelete={onDelete}/>)}\n              </Grid>\n              <Grid item xs={2}>\n                <CrawlFilterStatusOption disabled={false} status={crawlFilterPolicy}\n                                         setStatus={setCrawlFilterPolicy} isDefault={true}/>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default WebCrawlEdit;\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {AppBar, Tab, Tabs} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport WebCrawls from \"./WebCrawls\";\nimport FileCrawls from \"./FileCrawls\";\nimport WebCrawl from \"./WebCrawlEdit\";\nimport FileCrawl from \"./FileCrawl\";\n\nconst Crawls = () => {\n  const dispatch = useDispatch();\n  const crawlsView = useSelector<State>(state => state.crawlsView);\n  const editWebCrawl= useSelector<State>(state => state.editWebCrawl);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setCrawlsView(newValue))\n  };\n\n  console.trace(\"crawlsview\", crawlsView);\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Tabs value={crawlsView} onChange={handleChange} aria-label=\"Crawls tabs\">\n          <Tab label=\"Web Crawls\" value={CrawlsViews.WEB_CRAWLS}/>\n          <Tab label=\"File Crawls\" value={CrawlsViews.FILE_CRAWLS}/>\n        </Tabs>\n      </AppBar>\n      {(crawlsView === CrawlsViews.WEB_CRAWLS && !editWebCrawl) && <WebCrawls/>}\n      {(crawlsView === CrawlsViews.FILE_CRAWLS && true) && <FileCrawls/>}\n      {(crawlsView === CrawlsViews.WEB_CRAWLS && editWebCrawl) && <WebCrawl/>}\n      {(crawlsView === CrawlsViews.FILE_CRAWLS &&false) && <FileCrawl/>}\n    </div>\n  )\n}\n\nexport default Crawls;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport CrawlFilterItemView from \"./components/CrawlFilterItemView\";\nimport {useState} from \"react\";\nimport {CrawlFilterItem} from \"./types\";\nimport {useMutation} from \"@apollo/client\";\nimport {gql} from \"@apollo/client/core\";\n\nconst RUN_FILE_CRAWL = gql`\n  mutation RunFileCrawl($name: String!) {\n    runFileCrawl(name: $name) {name}\n  }\n`\n\nconst FileCrawl = () => {\n  const selectedFileCrawl = useSelector((state: State) => state.selectedFileCrawl)\n  const dispatch = useDispatch();\n  const [entryPath, setEntryPath] = useState<string>('');\n  const [maxDepth, setMaxDepth] = useState<number | undefined>(undefined);\n  const [crawlName, setCrawlName] = useState<string>(selectedFileCrawl || '');\n  const [crawlList, setCrawlList] = useState<CrawlFilterItem[]>([]);\n  const [nextItemIndex, setNextItemIndex] = useState<number>(1);\n\n  const [gqlRunFileCrawl, {loading}] = useMutation(RUN_FILE_CRAWL, {\n    variables: {name: crawlName, settings: {entryPath: entryPath, maxDepth: maxDepth}},\n    onCompleted: data => {\n      dispatch(setCrawlsView(CrawlsViews.FILE_CRAWLS));\n      console.trace(data);\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n\n  const onCancel = () => {\n    dispatch(setCrawlsView(CrawlsViews.FILE_CRAWLS));\n  }\n\n  const onRun = async () => {\n    await gqlRunFileCrawl();\n  }\n\n  const onAdd = (item: CrawlFilterItem) => {\n    const newItem = {...item, index: nextItemIndex};\n    setNextItemIndex(nextItemIndex + 1);\n    const newList = [...crawlList, newItem];\n    setCrawlList(newList);\n  }\n\n  const onSave = (itemToSave: CrawlFilterItem) => {\n   // const newList = crawlList.map(item => item.index === itemToSave.index ? itemToSave : item);\n    //setCrawlList(newList);\n  }\n\n  const onDelete = (itemToDelete: CrawlFilterItem) => {\n    //const newList = crawlList.filter(item => item.index !== itemToDelete.index);\n    //setCrawlList(newList);\n  }\n\n  return (\n    <Box p={1}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify={\"space-between\"} spacing={10}>\n            <Grid item>\n              <Typography align={\"right\"} variant={\"h5\"}>Start a new crawl</Typography>\n            </Grid>\n            <Grid item>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"secondary\"}\n                          onClick={onCancel}>Cancel</Button>\n                </Grid>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"primary\"}\n                          onClick={onRun}>Run</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <form noValidate autoComplete=\"off\">\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField fullWidth required id=\"name\" label=\"Name\" value={crawlName}\n                           disabled={loading}\n                           onChange={e => setCrawlName(e.target.value)}\n                           defaultValue={crawlName} placeholder={selectedFileCrawl || 'Crawl name'}/>\n              </Grid>\n              <Grid item xs={10}>\n                <TextField fullWidth required id=\"entryPath\" label=\"Entry Path\" value={entryPath}\n                           disabled={loading}\n                           onChange={e => setEntryPath(e.target.value)}\n                           placeholder={\"/var/local\"}/>\n              </Grid>\n              <Grid item xs={2}>\n                <TextField fullWidth id=\"max_depth\" label=\"Max depth\" type={\"number\"}\n                           disabled={loading}\n                           value={maxDepth} onChange={e => setMaxDepth(+e.target.value)}\n                           placeholder={\"1\"}/>\n              </Grid>\n              <Grid item xs={12}>\n                <CrawlFilterItemView onAdd={onAdd} disabled={loading}/>\n                {crawlList.map((item) =>\n                  <CrawlFilterItemView disabled={loading} key={0} filter={undefined} onSave={onSave}\n                                       onDelete={()=>{}}/>)}\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default FileCrawl;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider, useSelector} from \"react-redux\";\nimport store, {State, Views} from \"./store\";\nimport Navbar from \"./Navbar\";\nimport Gql from \"./Gql\";\nimport Indices from \"./Indices\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\nimport {GRAPHQL_ENDPOINT} from \"./constants\";\nimport Schema from \"./Schema\";\nimport Crawls from \"./Crawls\";\nimport {Box} from \"@material-ui/core\";\n\nconst View = () => {\n  const view = useSelector<State>(state => state.view)\n  switch (view) {\n    case Views.INDICES:\n      return (\n        <Indices/>\n      );\n    case Views.CRAWLS:\n      return (\n        <Crawls/>\n      );\n    case Views.QUERIES:\n      return (\n        <div>QUERIES</div>\n      );\n    case Views.GRAPHQL:\n      return (\n        <Gql/>\n      );\n    case Views.SCHEMA:\n      return (\n        <Schema/>\n      );\n    default:\n      return null;\n  }\n}\n\nconst apolloClient = new ApolloClient({\n  uri: GRAPHQL_ENDPOINT,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={apolloClient}>\n        <Box m={0} display={\"flex\"} flexDirection={\"column\"} height={\"100vh\"}>\n          <Box m={0} marginBottom={1}>\n            <Navbar/>\n          </Box>\n          <Box m={0} p={0} height={\"100vh\"}>\n            <View/>\n          </Box>\n        </Box>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}